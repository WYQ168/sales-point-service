<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sales.app.mapper.MerchantRelationMapper">
  <resultMap id="BaseResultMap" type="com.sales.app.domain.entity.MerchantRelation">
    <!--@mbg.generated-->
    <!--@Table t_merchant_relation-->
    <id column="relation_id" jdbcType="VARCHAR" property="relationId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="merchant_id" jdbcType="BIGINT" property="merchantId" />
    <result column="merchant_phone" jdbcType="VARCHAR" property="merchantPhone" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    relation_id, user_id, merchant_id, merchant_phone, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from t_merchant_relation
    where relation_id = #{relationId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--@mbg.generated-->
    delete from t_merchant_relation
    where relation_id = #{relationId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.sales.app.domain.entity.MerchantRelation">
    <!--@mbg.generated-->
    insert into t_merchant_relation (relation_id, user_id, merchant_id, 
      merchant_phone, create_time, update_time
      )
    values (#{relationId,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, #{merchantId,jdbcType=BIGINT}, 
      #{merchantPhone,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sales.app.domain.entity.MerchantRelation">
    <!--@mbg.generated-->
    insert into t_merchant_relation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="relationId != null">
        relation_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="merchantId != null">
        merchant_id,
      </if>
      <if test="merchantPhone != null">
        merchant_phone,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="relationId != null">
        #{relationId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="merchantId != null">
        #{merchantId,jdbcType=BIGINT},
      </if>
      <if test="merchantPhone != null">
        #{merchantPhone,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sales.app.domain.entity.MerchantRelation">
    <!--@mbg.generated-->
    update t_merchant_relation
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="merchantId != null">
        merchant_id = #{merchantId,jdbcType=BIGINT},
      </if>
      <if test="merchantPhone != null">
        merchant_phone = #{merchantPhone,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where relation_id = #{relationId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sales.app.domain.entity.MerchantRelation">
    <!--@mbg.generated-->
    update t_merchant_relation
    set user_id = #{userId,jdbcType=BIGINT},
      merchant_id = #{merchantId,jdbcType=BIGINT},
      merchant_phone = #{merchantPhone,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where relation_id = #{relationId,jdbcType=VARCHAR}
  </update>

  <select id="selectRelationByUserId" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from
    t_merchant_relation
    where
    user_id = #{userId,jdbcType=BIGINT}
  </select>
</mapper>