<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sales.app.mapper.IncomeRecordMapper">
  <resultMap id="BaseResultMap" type="com.sales.app.domain.entity.IncomeRecord">
    <!--@mbg.generated-->
    <!--@Table t_income_record-->
    <id column="income_id" jdbcType="BIGINT" property="incomeId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="income_source" jdbcType="VARCHAR" property="incomeSource" />
    <result column="income_amount" jdbcType="DECIMAL" property="incomeAmount" />
    <result column="flowing_type" jdbcType="INTEGER" property="flowingType" />
    <result column="income_type" jdbcType="INTEGER" property="incomeType" />
    <result column="create_by" jdbcType="BIGINT" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="BIGINT" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    income_id, user_id, income_source, income_amount, flowing_type, income_type, create_by, 
    create_time, update_by, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from t_income_record
    where income_id = #{incomeId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from t_income_record
    where income_id = #{incomeId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.sales.app.domain.entity.IncomeRecord">
    <!--@mbg.generated-->
    insert into t_income_record (income_id, user_id, income_source, 
      income_amount, flowing_type, income_type, 
      create_by, create_time, update_by, 
      update_time)
    values (#{incomeId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{incomeSource,jdbcType=VARCHAR}, 
      #{incomeAmount,jdbcType=DECIMAL}, #{flowingType,jdbcType=INTEGER}, #{incomeType,jdbcType=INTEGER}, 
      #{createBy,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.sales.app.domain.entity.IncomeRecord">
    <!--@mbg.generated-->
    insert into t_income_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="incomeId != null">
        income_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="incomeSource != null">
        income_source,
      </if>
      <if test="incomeAmount != null">
        income_amount,
      </if>
      <if test="flowingType != null">
        flowing_type,
      </if>
      <if test="incomeType != null">
        income_type,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="incomeId != null">
        #{incomeId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="incomeSource != null">
        #{incomeSource,jdbcType=VARCHAR},
      </if>
      <if test="incomeAmount != null">
        #{incomeAmount,jdbcType=DECIMAL},
      </if>
      <if test="flowingType != null">
        #{flowingType,jdbcType=INTEGER},
      </if>
      <if test="incomeType != null">
        #{incomeType,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sales.app.domain.entity.IncomeRecord">
    <!--@mbg.generated-->
    update t_income_record
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="incomeSource != null">
        income_source = #{incomeSource,jdbcType=VARCHAR},
      </if>
      <if test="incomeAmount != null">
        income_amount = #{incomeAmount,jdbcType=DECIMAL},
      </if>
      <if test="flowingType != null">
        flowing_type = #{flowingType,jdbcType=INTEGER},
      </if>
      <if test="incomeType != null">
        income_type = #{incomeType,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where income_id = #{incomeId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sales.app.domain.entity.IncomeRecord">
    <!--@mbg.generated-->
    update t_income_record
    set user_id = #{userId,jdbcType=BIGINT},
      income_source = #{incomeSource,jdbcType=VARCHAR},
      income_amount = #{incomeAmount,jdbcType=DECIMAL},
      flowing_type = #{flowingType,jdbcType=INTEGER},
      income_type = #{incomeType,jdbcType=INTEGER},
      create_by = #{createBy,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where income_id = #{incomeId,jdbcType=BIGINT}
  </update>

  <select id="selectMoneyRecordsByUserId" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from t_income_record
    where user_id =#{userId,jdbcType=BIGINT} and income_type = 2 and flowing_type = 1
  </select>

  <select id="selectBillList" resultType="com.sales.app.domain.response.BillResp">
    select
    flowing_type as flowingType,
    income_amount as incomeAmount,
    create_time as createTime
    from t_income_record
    where user_id = #{userId,jdbcType=BIGINT}
    and income_type = 2
  </select>

  <select id="selectIntegralList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from t_income_record
    where user_id = #{userId,jdbcType=BIGINT}
    and income_type = 1
    <if test="integralSource != null and integralSource.size()>0">
      and income_source in
      <foreach collection="integralSource" separator="," open="(" close=")" index="item">
        item
      </foreach>
    </if>
  </select>

  <select id="selectRecordListByIntegral" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from t_income_record
    where user_id = #{userId,jdbcType=BIGINT}
    and income_type = 1
    and flowing_type = #{flowingType,jdbcType=INTEGER}
  </select>
</mapper>