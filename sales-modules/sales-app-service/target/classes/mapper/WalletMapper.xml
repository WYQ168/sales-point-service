<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sales.app.mapper.WalletMapper">
  <resultMap id="BaseResultMap" type="com.sales.app.domain.entity.Wallet">
    <!--@mbg.generated-->
    <!--@Table t_wallet-->
    <id column="wallet_id" jdbcType="BIGINT" property="walletId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="identity_number" jdbcType="VARCHAR" property="identityNumber" />
    <result column="available_balance" jdbcType="DECIMAL" property="availableBalance" />
    <result column="generic_integral" jdbcType="INTEGER" property="genericIntegral" />
    <result column="activity_integral" jdbcType="INTEGER" property="activityIntegral" />
    <result column="taxable_amount" jdbcType="DECIMAL" property="taxableAmount" />
    <result column="withdraw_amount" jdbcType="DECIMAL" property="withdrawAmount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_by" jdbcType="BIGINT" property="createBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_by" jdbcType="BIGINT" property="updateBy" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    wallet_id, user_id, real_name, identity_number, available_balance, generic_integral, 
    activity_integral, taxable_amount, withdraw_amount, create_time, create_by, update_time, 
    update_by
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from t_wallet
    where wallet_id = #{walletId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from t_wallet
    where wallet_id = #{walletId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.sales.app.domain.entity.Wallet">
    <!--@mbg.generated-->
    insert into t_wallet (wallet_id, user_id, real_name, 
      identity_number, available_balance, generic_integral, 
      activity_integral, taxable_amount, withdraw_amount, 
      create_time, create_by, update_time, 
      update_by)
    values (#{walletId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{realName,jdbcType=VARCHAR}, 
      #{identityNumber,jdbcType=VARCHAR}, #{availableBalance,jdbcType=DECIMAL}, #{genericIntegral,jdbcType=INTEGER}, 
      #{activityIntegral,jdbcType=INTEGER}, #{taxableAmount,jdbcType=DECIMAL}, #{withdrawAmount,jdbcType=DECIMAL}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.sales.app.domain.entity.Wallet">
    <!--@mbg.generated-->
    insert into t_wallet
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="walletId != null">
        wallet_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="identityNumber != null">
        identity_number,
      </if>
      <if test="availableBalance != null">
        available_balance,
      </if>
      <if test="genericIntegral != null">
        generic_integral,
      </if>
      <if test="activityIntegral != null">
        activity_integral,
      </if>
      <if test="taxableAmount != null">
        taxable_amount,
      </if>
      <if test="withdrawAmount != null">
        withdraw_amount,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="walletId != null">
        #{walletId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="identityNumber != null">
        #{identityNumber,jdbcType=VARCHAR},
      </if>
      <if test="availableBalance != null">
        #{availableBalance,jdbcType=DECIMAL},
      </if>
      <if test="genericIntegral != null">
        #{genericIntegral,jdbcType=INTEGER},
      </if>
      <if test="activityIntegral != null">
        #{activityIntegral,jdbcType=INTEGER},
      </if>
      <if test="taxableAmount != null">
        #{taxableAmount,jdbcType=DECIMAL},
      </if>
      <if test="withdrawAmount != null">
        #{withdrawAmount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sales.app.domain.entity.Wallet">
    <!--@mbg.generated-->
    update t_wallet
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="identityNumber != null">
        identity_number = #{identityNumber,jdbcType=VARCHAR},
      </if>
      <if test="availableBalance != null">
        available_balance = #{availableBalance,jdbcType=DECIMAL},
      </if>
      <if test="genericIntegral != null">
        generic_integral = #{genericIntegral,jdbcType=INTEGER},
      </if>
      <if test="activityIntegral != null">
        activity_integral = #{activityIntegral,jdbcType=INTEGER},
      </if>
      <if test="taxableAmount != null">
        taxable_amount = #{taxableAmount,jdbcType=DECIMAL},
      </if>
      <if test="withdrawAmount != null">
        withdraw_amount = #{withdrawAmount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=BIGINT},
      </if>
    </set>
    where wallet_id = #{walletId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sales.app.domain.entity.Wallet">
    <!--@mbg.generated-->
    update t_wallet
    set user_id = #{userId,jdbcType=BIGINT},
      real_name = #{realName,jdbcType=VARCHAR},
      identity_number = #{identityNumber,jdbcType=VARCHAR},
      available_balance = #{availableBalance,jdbcType=DECIMAL},
      generic_integral = #{genericIntegral,jdbcType=INTEGER},
      activity_integral = #{activityIntegral,jdbcType=INTEGER},
      taxable_amount = #{taxableAmount,jdbcType=DECIMAL},
      withdraw_amount = #{withdrawAmount,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=BIGINT}
    where wallet_id = #{walletId,jdbcType=BIGINT}
  </update>

  <select id="selectByUserId" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from t_wallet
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
</mapper>